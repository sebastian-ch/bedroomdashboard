{"version":3,"sources":["Time.js","Sunrise.js","Wiki.js","Marvel.js","App.js","reportWebVitals.js","index.js"],"names":["Time","today","Date","tTime","getHours","slice","getMinutes","dd","String","getDate","padStart","tDate","getMonth","getFullYear","useState","time","setTime","useEffect","setInterval","className","Sunrise","sunrise","setSunrise","greeting","setGreeting","latlng","tomorrow","setDate","fetchDate","structureDate","todayHour","x","mm","Greeting","fetch","then","results","json","data","utcDate","locDate","console","log","Wiki","rando","setRando","getWiki","res","thumbnail","alt","src","source","width","height","title","description","extract","Marvel","marvelData","setMarvelData","getMarvelData","starter","fromCharCode","Math","floor","random","max","num","count","path","extension","App","bcolor","setBcolor","setBackgroundColor","hr","style","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2b5341.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\r\n\r\nfunction Time() {\r\n\r\n    let today = new Date();\r\n    //let tTime = ('0'+today.getHours()).slice(-2)  + ':' + ('0'+today.getMinutes()).slice(-2) + ':' + ('0'+today.getSeconds()).slice(-2);\r\n    let tTime = ('0'+today.getHours()).slice(-2)  + ':' + ('0'+today.getMinutes()).slice(-2);\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear(); \r\n\r\n    let tDate = mm + '/' + dd + '/' + yyyy;\r\n\r\n    const [time, setTime] = useState(tTime);\r\n    //const [currentDay, setDay] = useState(tDate);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setInterval(() => {\r\n            today = new Date();\r\n            tTime = ('0'+today.getHours()).slice(-2)  + ':' + ('0'+today.getMinutes()).slice(-2);\r\n            setTime(tTime);\r\n            },60000)\r\n\r\n    },[])\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <span className='date'>{tDate}</span>\r\n            <span className='time'><h1>{time}</h1></span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Time;","import {useState, useEffect} from 'react'\r\n\r\n\r\nfunction Sunrise() {\r\n\r\n    const [sunrise, setSunrise] = useState([])\r\n    const [greeting, setGreeting] = useState([])\r\n\r\n    const latlng = [34.17, -118.61];\r\n\r\n    let today = new Date();\r\n    let tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    let fetchDate = structureDate(today)\r\n\r\n    let todayHour = today.getHours()\r\n\r\n    if (todayHour >= 7) {\r\n        fetchDate = structureDate(tomorrow)\r\n    }\r\n\r\n    //console.log(fetchDate)\r\n    //console.log(todayHour)\r\n    function structureDate(x) {\r\n        var dd = String(x.getDate()).padStart(2, '0');\r\n        var mm = String(x.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = x.getFullYear(); \r\n        let tDate = yyyy + '-' + mm + '-' + dd;\r\n        return tDate;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        function Greeting() {\r\n            today = new Date();\r\n            todayHour = today.getHours();\r\n            if(todayHour < 12) {\r\n                setGreeting('Good Morning')\r\n            } else if(13 <= todayHour && todayHour <= 18) {\r\n                setGreeting('Good Afternoon')\r\n            } else if (18 < todayHour) {\r\n                setGreeting('Good Evening')\r\n            }\r\n        }\r\n\r\n        fetch(`https://api.sunrise-sunset.org/json?lat=${latlng[0]}&lng=${latlng[1]}&date=${fetchDate}&formatted=0`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n                //console.log(data.results.sunrise);\r\n                var utcDate = data.results.sunrise;\r\n                var locDate = new Date(utcDate) \r\n                console.log(locDate.getHours() + \":\" + locDate.getMinutes());\r\n                setSunrise(locDate.getHours() + \":\" + locDate.getMinutes())\r\n                //setSunrise(data.results.sunrise);\r\n            })\r\n        Greeting()\r\n        setInterval(() => {\r\n\r\n            //console.log('hour: ' + todayHour)\r\n            Greeting()\r\n        },3600000)\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='greet' >{greeting}, Sebastian</div>\r\n            <div className='sunrise'>Sunrise: {sunrise} AM</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sunrise;","import {useEffect, useState} from 'react';\r\n\r\nfunction Wiki() {\r\n\r\n    const [rando, setRando] = useState([])\r\n\r\n    //getWiki();\r\n    function getWiki() {\r\n        fetch(\"https://en.wikipedia.org/api/rest_v1/page/random/summary\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                //console.log(data);\r\n                setRando(data);\r\n            })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getWiki();\r\n        setInterval(() => {\r\n            getWiki()\r\n        }, 3600000)\r\n        \r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className='wiki'>\r\n            {rando.thumbnail ? <div>\r\n                <img alt='wiki thumbnail' src={rando.thumbnail.source} width={rando.thumbnail.width} height={rando.thumbnail.height}/>\r\n                <div className='wiki-title'><b>{rando.title}</b></div>\r\n                <div>{rando.description}</div>\r\n                <div className='wiki-desc'>{rando.extract}</div>\r\n            </div> : <div>loading..</div> }\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wiki;","import {useEffect, useState} from 'react';\r\n\r\nfunction Marvel() {\r\n\r\n    const [marvelData, setMarvelData] = useState([])\r\n\r\n    const pubKey = '9e656fd191967a9bf10b3f6cc034b0ac'\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * max);\r\n      }\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        function getMarvelData() {\r\n        \r\n            const starter = String.fromCharCode(97+Math.floor(Math.random() * 26))\r\n            console.log(starter);\r\n            fetch(`https://gateway.marvel.com:443/v1/public/comics?titleStartsWith=${starter}&apikey=${pubKey}`)\r\n                .then(results => results.json())\r\n                .then(data => {\r\n                    //console.log(data.data.count)\r\n                    let num = getRandomInt(data.data.count)\r\n                    //console.log(data.data.results[num])\r\n                    setMarvelData(data.data.results[num])\r\n                })\r\n        }\r\n\r\n        getMarvelData();\r\n\r\n        setInterval(() => {\r\n            getMarvelData();\r\n        }, 3300009)\r\n\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div className='marvel'>\r\n            {marvelData.thumbnail ? <div>\r\n            <img alt='marvel comic cover' height='500'src={marvelData.thumbnail.path + '.' + marvelData.thumbnail.extension} />\r\n            <div className='marvelTitle'>{marvelData.title}</div>\r\n            </div> : <div>loading marvel..</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Marvel;","import {useEffect, useState} from 'react';\r\n\r\nimport Time from './Time'\r\nimport './App.css';\r\nimport Sunrise from './Sunrise';\r\nimport Wiki from './Wiki';\r\nimport Marvel from './Marvel';\r\n\r\nfunction App() {\r\n\r\n  const [bcolor, setBcolor] = useState('#030201');\r\n\r\n  useEffect(() => {\r\n\r\n    function setBackgroundColor() {\r\n\r\n      let t = new Date();\r\n      let hr = t.getHours();\r\n\r\n      if (hr === 5) {\r\n        setBcolor('#AC66CC')\r\n      } else if ( hr === 6) {\r\n        setBcolor('#F6B8B8')\r\n      } else if (hr === 7) {\r\n        setBcolor('#FFED99')\r\n      } else if (hr >= 8) {\r\n        setBcolor('#030201')\r\n      }\r\n\r\n    }\r\n\r\n    setBackgroundColor();\r\n\r\n    setInterval(() => {\r\n      setBackgroundColor();\r\n    }, 3600000)\r\n\r\n\r\n  },[])\r\n  \r\n  \r\n  return (\r\n    <div className=\"App\"\r\n          style={{\r\n            backgroundColor: bcolor\r\n          }}\r\n    \r\n    >\r\n     <Time />\r\n     <Sunrise />\r\n     <div className='rows'>\r\n      <Wiki />\r\n     <Marvel />\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}